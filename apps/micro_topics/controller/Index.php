<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/6/24
 * Time: 18:56
 */
namespace app\micro_topics\controller;
use app\home\controller\Home;
use app\micro_topics\model\MicroTopics as ListModel;
use app\micro_topics\model\MicroTopicsComment as CommentModel;
use app\common\model\User as UserModel;
use app\common\model\Terms as TermsModel;
use app\micro_topics\model\MicroTopicsUsers as MTUserModel;

class Index extends Home
{

    protected $ListModel;
    protected $UserModel;
    protected $TermsModel;
    protected $CommentModel;
    protected $MTUserModel;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->ListModel = new ListModel();
        $this->UserModel = new UserModel();
        $this->TermsModel = new TermsModel();
        $this->CommentModel = new CommentModel();
        $this->MTUserModel = new MTUserModel();
        //版块信息
        $this->assign('infomain',json_decode(db('modules')->where('name','micro_topics')->find()['config'],true));
        //热门帖子
        $this->assign('hot_post', logic('Index')->hot_post());
        //日回帖排行 Start
        $this->assign('day_ranking_list',logic('Index')->reply_day());
        //周回帖排行 Start
        $this->assign('week_ranking_list',logic('Index')->reply_week());
    }


    /*
     *  帖子列表
     *  2018-6-25
     *  yyyvy
     * */
    public function index()
    {
        $this->pageInfo('首页', 'index');

        $map = [
            'status' => 1
        ];
        //分类筛选
        $cat_id = input('param.category_id');
        if ($cat_id > 0) {
            $map['category_id'] = $cat_id;
        }

        //排序方式
        $order_type = input('param.order_type');
        //回复是0，默认是回复排序，最新是1
        if ($order_type) {
            $order_type = 'create_time desc';
        }else{
            $order_type = 'update_time desc';
        }

        $data_list = $this->ListModel->where($map)->order($order_type)->paginate(15);
        $overhead_list = [];    //置顶列表
        $post_list = [];    //普通列表
        foreach ($data_list as $value) {
            $userinfo = $this->UserModel->where('uid', $value['uid'])->find();
            $mtuserinfo = $this->MTUserModel->where('uid', $value['uid'])->find();
            $commentinfo = $this->CommentModel->where('topic_id', $value['id'])->field('uid,create_time')->order('create_time desc')->find();
            $value['cat_name'] = $this->TermsModel->where('term_id', $value['category_id'])->find()['name'];
            $value['avatar'] = $userinfo['avatar'];
            $value['nickname'] = $userinfo['nickname'];
            $value['role'] = $mtuserinfo['role'];
            $value['vip'] = $mtuserinfo['vip_end_time'] >= strtotime(date('Y-m-d',strtotime('+1 day'))) ? 1 : 0;
            $value['author'] = $mtuserinfo['author'];
            $value['author_info'] = $mtuserinfo['author_info'];
            //判断是否有图
            $is_img = preg_match('/<img.*?\/?>/is', $value['content']); //正则判断内容里面是否包含图片标签
            $value['is_img'] = $is_img?1:0;
            //取最后回复人，和时间
            $value['last_nickname'] = $this->UserModel->where('uid', $commentinfo['uid'])->find()['nickname'];
            $value['last_time'] = $commentinfo['create_time'];
            if($value['overhead']){
                array_push($overhead_list,$value);
            }else{
                array_push($post_list,$value);
            }
        }
        //输出分类
        $cat_list = $this->TermsModel->where('taxonomy', 'micro_topics')->select();

        //print_r($hot_post);die;

        $this->assign('overhead_list', $overhead_list);
        $this->assign('list', $post_list);
        $this->assign('cat_list', $cat_list);
        $this->assign('count', $this->ListModel->count());

        $order_type_active = input('param.order_type')?1:0;
        $this->assign('order_type', $order_type_active);
        //print_r($post_list);die;


        return $this->fetch();
    }


    /*
     *  帖子内容
     *  2018-6-25
     *  yyyvy
     *  */
    public function detail($id)
    {
        $info = $this->ListModel->where('id', $id)->find();
        $userinfo = $this->UserModel->where('uid', $info['uid'])->find();
        $mtuserinfo = $this->MTUserModel->where('uid', $info['uid'])->find();
        $info['avatar'] = $userinfo['avatar'];
        $info['nickname'] = $userinfo['nickname'];
        $info['role'] = $mtuserinfo['role'];
        $info['vip'] = $mtuserinfo['vip_end_time'] >= strtotime(date('Y-m-d',strtotime('+1 day'))) ? 1 : 0;
        $info['author'] = $mtuserinfo['author'];
        $info['author_info'] = $mtuserinfo['author_info'];

        //是否回复过此文章，开启回复可见
        if (is_login()){
            $info['return_visible'] = $this->CommentModel->where(['topic_id'=>$id,'uid'=>is_login()])->find()?1:0;
        }else{
            $info['return_visible'] = 0;
        }
        //浏览量+1
        $this->ListModel->where('id', $id)->setInc('view');
        //$info['respond_visible']
        //print_r();die;
        //评论列表
        $comment_list = $this->CommentModel->where('topic_id', $id)->order('create_time asc')->select();
        foreach ($comment_list as $value) {
            $cominfo = $this->UserModel->where('uid', $value['uid'])->find();
            $mtcominfo = $this->MTUserModel->where('uid', $value['uid'])->find();
            $value['avatar'] = $cominfo['avatar'];
            $value['nickname'] = $cominfo['nickname'];
            $value['role'] = $mtcominfo['role'];
            $value['vip'] = $mtcominfo['vip_end_time'] >= strtotime(date('Y-m-d',strtotime('+1 day'))) ? 1 : 0;
            $value['author'] = $mtcominfo['author'];
            $value['author_info'] = $mtcominfo['author_info'];
        }
        //print_r($comment_list);die;
        $this->assign('info', $info);
        $this->assign('comment_list', $comment_list);
        return $this->fetch();
    }


    /*
     * 帖子回复
     * 2018-6-26
     * yyyvy
     * */
    public function reply(){
        if(IS_POST){
            if(is_login()){
                $data = $this->request->param();
                $data['uid'] = is_login();
                $data['content'] = htmlspecialchars_decode($data['content']);
                $result = $this->CommentModel->save($data);
                if($result){
                    //评论+1
                    $this->ListModel->where('id',$data['topic_id'])->setInc('comment');
                    return ['code'=>200,'msg'=>'评论成功！'];
                }
            }else{
                return ['code'=>400,'msg'=>'失败！'];
            }
        }
    }

    /*
     * 是否登录判断
     * 2018-6-27
     * yyyvy
     * */
    public function is_login(){
        if(is_login()){
            return 200;
        }else{
            return 400;
        }
    }

    /*
     *  Description: 会员登录
     *  By: yyyvy  <QQ:76836785>
     *  Time: 2018-6-27
     * */
    public function login(){
        if (IS_POST) {
            $data = $this->request->param();
            $result = $this->validate($data, [
                ['username', 'require|min:1', '登录名不能为空|登录名格式不正确'],
                ['password', 'require|length:6,32', '请填写密码|密码格式不正确']
            ]);
            if (true !== $result) {
                // 验证失败 输出错误信息
                $this->error($result);
                exit;
            }
            if(isset($data['rememberme'])){
                $rememberme = $data['rememberme']==1 ? true : false;
            }else{
                $rememberme = false;
            }

            $result = logic('common/User')->login($data['username'],$data['password'], $rememberme);
            //print_r($result);die;

            if ($result['code']==1) {
                return ['code'=>200,'msg'=>'登录成功！'];
            } elseif ($result['code']==0) {
                return ['code'=>400,'msg'=>$result['msg']];
            } else {
                $this->logout();
            }
        }
    }

}